// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  userId    Int     @id @default(autoincrement())
  email String  @unique
  name  String
  lastname String
  feedbacks Feedback[]
  comments Comment[]
  likes Like[]
}

model Feedback {
  feedbackId Int     @id @default(autoincrement())
  author User @relation(fields: [authorId], references: [userId])
  authorId Int
  title String
  description String
  category Tag @relation(fields: [categoryId], references: [tagId])
  categoryId Int
  comments Comment[]
  likes Like[]
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

model Comment {
  commentId Int     @id @default(autoincrement())
  author User @relation(fields:[authorId], references: [userId])
  authorId Int
  feedback Feedback @relation(fields: [feedbackId], references: [feedbackId])
  feedbackId Int
  content String
  createdAt DateTime @default(now())
}

model Like {
  likeId Int @id @default(autoincrement())
  author User @relation(fields: [authorId], references: [userId])
  authorId Int
  feedback Feedback @relation(fields: [feedbackId], references: [feedbackId])
  feedbackId Int
}

model Tag {
  tagId Int @id @default(autoincrement())
  name String
  feedbacks Feedback[]
}